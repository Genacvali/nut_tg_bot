/**
 * –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã –ö–ë–ñ–£ –∏ –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞
 */

/**
 * –†–∞—Å—á–µ—Ç BMR –ø–æ —Ñ–æ—Ä–º—É–ª–µ –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞
 */
export function calculateBMRMifflin(
  weight: number,
  height: number,
  age: number,
  gender: string
): number {
  if (gender === 'male') {
    return (10 * weight) + (6.25 * height) - (5 * age) + 5
  } else {
    return (10 * weight) + (6.25 * height) - (5 * age) - 161
  }
}

/**
 * –†–∞—Å—á–µ—Ç BMR –ø–æ —Ñ–æ—Ä–º—É–ª–µ –•–∞—Ä—Ä–∏—Å–∞-–ë–µ–Ω–µ–¥–∏–∫—Ç–∞
 */
export function calculateBMRHarris(
  weight: number,
  height: number,
  age: number,
  gender: string
): number {
  if (gender === 'male') {
    return 88.362 + (13.397 * weight) + (4.799 * height) - (5.677 * age)
  } else {
    return 447.593 + (9.247 * weight) + (3.098 * height) - (4.330 * age)
  }
}

/**
 * –†–∞—Å—á–µ—Ç TDEE —Å —É—á–µ—Ç–æ–º —É—Ä–æ–≤–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 */
export function calculateTDEE(bmr: number, activityLevel: string): number {
  const multipliers: { [key: string]: number } = {
    'sedentary': 1.2,
    'light': 1.375,
    'moderate': 1.55,
    'active': 1.725,
    'very_active': 1.9
  }

  return bmr * (multipliers[activityLevel] || 1.2)
}

/**
 * –†–∞—Å—á–µ—Ç —Ü–µ–ª–µ–≤–æ–π –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ü–µ–ª–∏
 */
export function calculateTargetCalories(tdee: number, goal: string): number {
  if (goal === 'lose') {
    return Math.round(tdee * 0.85)
  } else if (goal === 'gain') {
    return Math.round(tdee * 1.15)
  } else {
    return Math.round(tdee)
  }
}

/**
 * –†–∞—Å—á–µ—Ç –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤
 */
export function calculateMacros(targetCalories: number, goal: string): {
  protein: number
  fats: number
  carbs: number
} {
  let proteinPercent: number
  let fatPercent: number
  let carbPercent: number

  if (goal === 'lose') {
    proteinPercent = 0.35
    fatPercent = 0.25
    carbPercent = 0.40
  } else if (goal === 'gain') {
    proteinPercent = 0.30
    fatPercent = 0.25
    carbPercent = 0.45
  } else {
    proteinPercent = 0.30
    fatPercent = 0.30
    carbPercent = 0.40
  }

  return {
    protein: Math.round((targetCalories * proteinPercent) / 4 * 10) / 10,
    fats: Math.round((targetCalories * fatPercent) / 9 * 10) / 10,
    carbs: Math.round((targetCalories * carbPercent) / 4 * 10) / 10
  }
}

/**
 * –ü–æ–ª–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è
 */
export function calculateFullNutritionPlan(params: {
  weight: number
  height: number
  age: number
  gender: string
  activityLevel: string
  goal: string
  method: string
}): {
  bmr: number
  tdee: number
  targetCalories: number
  protein: number
  fats: number
  carbs: number
} {
  // –†–∞—Å—á–µ—Ç BMR
  const bmr = params.method === 'mifflin'
    ? calculateBMRMifflin(params.weight, params.height, params.age, params.gender)
    : calculateBMRHarris(params.weight, params.height, params.age, params.gender)

  // –†–∞—Å—á–µ—Ç TDEE
  const tdee = calculateTDEE(bmr, params.activityLevel)

  // –¶–µ–ª–µ–≤–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å
  const targetCalories = calculateTargetCalories(tdee, params.goal)

  // –ú–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç—ã
  const macros = calculateMacros(targetCalories, params.goal)

  return {
    bmr: Math.round(bmr * 10) / 10,
    tdee: Math.round(tdee * 10) / 10,
    targetCalories,
    protein: macros.protein,
    fats: macros.fats,
    carbs: macros.carbs
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∏–∫–∏ —Ä–∞—Å—á–µ—Ç–∞
 */
export function getMethodologyExplanation(
  method: string,
  goal: string,
  activityLevel: string,
  bmr: number,
  tdee: number,
  targetCalories: number
): string {
  const methodName = method === 'mifflin' ? '–ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞' : '–•–∞—Ä—Ä–∏—Å–∞-–ë–µ–Ω–µ–¥–∏–∫—Ç–∞'

  const activityNames: { [key: string]: string } = {
    'sedentary': '—Å–∏–¥—è—á–∏–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 1.2)',
    'light': '–ª–µ–≥–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 1-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 1.375)',
    'moderate': '—É–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 3-5 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 1.55)',
    'active': '–≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 6-7 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 1.725)',
    'very_active': '–æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 2 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 1.9)'
  }

  const goalNames: { [key: string]: string } = {
    'lose': '–ø–æ—Ö—É–¥–µ–Ω–∏–µ (–¥–µ—Ñ–∏—Ü–∏—Ç 15%)',
    'maintain': '–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞',
    'gain': '–Ω–∞–±–æ—Ä –º–∞—Å—Å—ã (–ø—Ä–æ—Ñ–∏—Ü–∏—Ç 15%)'
  }

  return `üìä –ú–ï–¢–û–î–ò–ö–ê –†–ê–°–ß–ï–¢–ê:

üîπ –ë–∞–∑–æ–≤—ã–π –º–µ—Ç–∞–±–æ–ª–∏–∑–º (BMR): ${Math.round(bmr)} –∫–∫–∞–ª/–¥–µ–Ω—å
   –†–∞—Å—Å—á–∏—Ç–∞–Ω –ø–æ —Ñ–æ—Ä–º—É–ª–µ ${methodName} - –æ–¥–Ω–æ–π –∏–∑ —Å–∞–º—ã—Ö —Ç–æ—á–Ω—ã—Ö —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª.

üîπ –û–±—â–∏–π —Ä–∞—Å—Ö–æ–¥ —ç–Ω–µ—Ä–≥–∏–∏ (TDEE): ${Math.round(tdee)} –∫–∫–∞–ª/–¥–µ–Ω—å
   BMR —É–º–Ω–æ–∂–µ–Ω –Ω–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (${activityNames[activityLevel] || activityLevel})

üîπ –¶–µ–ª–µ–≤–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å: ${targetCalories} –∫–∫–∞–ª/–¥–µ–Ω—å
   –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–¥ –≤–∞—à—É —Ü–µ–ª—å: ${goalNames[goal] || goal}

üîπ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤:
   –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –≤–∞—à–µ–π —Ü–µ–ª–∏ —Å —É—á–µ—Ç–æ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —É—Å–≤–æ–µ–Ω–∏—è –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.`
}

