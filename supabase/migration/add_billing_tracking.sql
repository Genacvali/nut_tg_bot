-- ========================================
-- –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–†–ï–ö–ò–ù–ì–ê –ë–ò–õ–õ–ò–ù–ì–ê LLM
-- –î–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è DDOS –∏ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π
-- ========================================

-- –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –±–∏–ª–ª–∏–Ω–≥–∞ –≤ —Ç–∞–±–ª–∏—Ü—É users
ALTER TABLE users
ADD COLUMN IF NOT EXISTS total_tokens_used BIGINT DEFAULT 0,
ADD COLUMN IF NOT EXISTS total_cost_usd DECIMAL(10, 4) DEFAULT 0.0000,
ADD COLUMN IF NOT EXISTS llm_requests_count INTEGER DEFAULT 0,
ADD COLUMN IF NOT EXISTS last_llm_request_at TIMESTAMPTZ,
ADD COLUMN IF NOT EXISTS requests_today INTEGER DEFAULT 0,
ADD COLUMN IF NOT EXISTS cost_today DECIMAL(10, 4) DEFAULT 0.0000,
ADD COLUMN IF NOT EXISTS last_reset_date DATE DEFAULT CURRENT_DATE;

-- –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ LLM –∑–∞–ø—Ä–æ—Å–æ–≤
CREATE TABLE IF NOT EXISTS llm_usage_logs (
  id BIGSERIAL PRIMARY KEY,
  user_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  request_type TEXT NOT NULL, -- 'nutrition_plan', 'food_analysis', 'recipe', etc.
  model TEXT NOT NULL, -- 'gpt-4', 'gpt-3.5-turbo', etc.
  prompt_tokens INTEGER NOT NULL,
  completion_tokens INTEGER NOT NULL,
  total_tokens INTEGER NOT NULL,
  cost_usd DECIMAL(10, 6) NOT NULL,
  request_duration_ms INTEGER, -- –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –≤ –º—Å
  created_at TIMESTAMPTZ DEFAULT NOW()
);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
CREATE INDEX IF NOT EXISTS idx_llm_logs_user_id ON llm_usage_logs(user_id);
CREATE INDEX IF NOT EXISTS idx_llm_logs_created_at ON llm_usage_logs(created_at);
CREATE INDEX IF NOT EXISTS idx_llm_logs_user_date ON llm_usage_logs(user_id, created_at);
CREATE INDEX IF NOT EXISTS idx_users_requests_today ON users(requests_today);
CREATE INDEX IF NOT EXISTS idx_users_cost_today ON users(cost_today);

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ LLM –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
CREATE OR REPLACE FUNCTION log_llm_usage(
  p_user_id BIGINT,
  p_request_type TEXT,
  p_model TEXT,
  p_prompt_tokens INTEGER,
  p_completion_tokens INTEGER,
  p_cost_usd DECIMAL,
  p_duration_ms INTEGER DEFAULT NULL
)
RETURNS void
LANGUAGE plpgsql
AS $$
DECLARE
  v_total_tokens INTEGER;
  v_current_date DATE;
BEGIN
  v_total_tokens := p_prompt_tokens + p_completion_tokens;
  v_current_date := CURRENT_DATE;
  
  -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
  INSERT INTO llm_usage_logs (
    user_id, request_type, model, 
    prompt_tokens, completion_tokens, total_tokens,
    cost_usd, request_duration_ms
  ) VALUES (
    p_user_id, p_request_type, p_model,
    p_prompt_tokens, p_completion_tokens, v_total_tokens,
    p_cost_usd, p_duration_ms
  );
  
  -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  UPDATE users
  SET 
    total_tokens_used = total_tokens_used + v_total_tokens,
    total_cost_usd = total_cost_usd + p_cost_usd,
    llm_requests_count = llm_requests_count + 1,
    last_llm_request_at = NOW(),
    -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–Ω–µ–≤–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏ –µ—Å–ª–∏ –Ω–æ–≤—ã–π –¥–µ–Ω—å
    requests_today = CASE 
      WHEN last_reset_date < v_current_date THEN 1 
      ELSE requests_today + 1 
    END,
    cost_today = CASE 
      WHEN last_reset_date < v_current_date THEN p_cost_usd 
      ELSE cost_today + p_cost_usd 
    END,
    last_reset_date = v_current_date
  WHERE id = p_user_id;
END;
$$;

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CREATE OR REPLACE FUNCTION get_user_llm_stats(p_user_id BIGINT)
RETURNS TABLE (
  total_requests INTEGER,
  total_tokens BIGINT,
  total_cost DECIMAL,
  requests_today INTEGER,
  cost_today DECIMAL,
  avg_tokens_per_request DECIMAL,
  last_request TIMESTAMPTZ
)
LANGUAGE plpgsql
AS $$
BEGIN
  RETURN QUERY
  SELECT 
    u.llm_requests_count,
    u.total_tokens_used,
    u.total_cost_usd,
    u.requests_today,
    u.cost_today,
    CASE 
      WHEN u.llm_requests_count > 0 
      THEN ROUND(u.total_tokens_used::DECIMAL / u.llm_requests_count, 2)
      ELSE 0 
    END,
    u.last_llm_request_at
  FROM users u
  WHERE u.id = p_user_id;
END;
$$;

-- View –¥–ª—è —Ç–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º
CREATE OR REPLACE VIEW top_spenders AS
SELECT 
  u.id,
  u.telegram_id,
  u.username,
  u.llm_requests_count,
  u.total_tokens_used,
  u.total_cost_usd,
  u.requests_today,
  u.cost_today,
  u.last_llm_request_at,
  ROUND(u.total_tokens_used::DECIMAL / NULLIF(u.llm_requests_count, 0), 0) as avg_tokens_per_request
FROM users u
WHERE u.llm_requests_count > 0
ORDER BY u.total_cost_usd DESC
LIMIT 50;

-- View –¥–ª—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
CREATE OR REPLACE VIEW suspicious_activity AS
SELECT 
  u.id,
  u.telegram_id,
  u.username,
  u.requests_today,
  u.cost_today,
  u.llm_requests_count,
  u.total_cost_usd,
  u.last_llm_request_at,
  CASE
    WHEN u.requests_today > 100 THEN 'üö® –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –¥–µ–Ω—å'
    WHEN u.cost_today > 5.0 THEN 'üí∞ –ë–æ–ª—å—à–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ –¥–µ–Ω—å'
    WHEN u.total_cost_usd > 20.0 THEN 'üí∏ –ë–æ–ª—å—à–∏–µ –æ–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã'
    ELSE '‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
  END as alert_reason
FROM users u
WHERE 
  u.requests_today > 100  -- –ë–æ–ª–µ–µ 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
  OR u.cost_today > 5.0   -- –ë–æ–ª–µ–µ $5 –≤ –¥–µ–Ω—å
  OR u.total_cost_usd > 20.0  -- –ë–æ–ª–µ–µ $20 –≤—Å–µ–≥–æ
ORDER BY u.requests_today DESC, u.cost_today DESC;

-- –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤ (>30 –¥–Ω–µ–π)
CREATE OR REPLACE FUNCTION cleanup_old_llm_logs()
RETURNS INTEGER
LANGUAGE plpgsql
AS $$
DECLARE
  deleted_count INTEGER;
BEGIN
  DELETE FROM llm_usage_logs
  WHERE created_at < NOW() - INTERVAL '30 days';
  
  GET DIAGNOSTICS deleted_count = ROW_COUNT;
  
  RAISE NOTICE '–£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö LLM –ª–æ–≥–æ–≤: %', deleted_count;
  
  RETURN deleted_count;
END;
$$;

-- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É —á–µ—Ä–µ–∑ pg_cron (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
-- SELECT cron.schedule(
--   'cleanup-old-llm-logs',
--   '0 4 * * *',  -- –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 4:00
--   'SELECT cleanup_old_llm_logs();'
-- );

-- ========================================
-- –ü–†–û–í–ï–†–ö–ê
-- ========================================

-- –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
SELECT * FROM top_spenders LIMIT 10;

-- –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
SELECT * FROM suspicious_activity;

-- –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
SELECT 
  COUNT(*) as total_users,
  SUM(llm_requests_count) as total_requests,
  SUM(total_tokens_used) as total_tokens,
  ROUND(SUM(total_cost_usd), 2) as total_cost_usd,
  ROUND(AVG(total_cost_usd), 4) as avg_cost_per_user,
  MAX(total_cost_usd) as max_user_cost
FROM users
WHERE llm_requests_count > 0;

COMMENT ON TABLE llm_usage_logs IS '–î–µ—Ç–∞–ª—å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö LLM –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –±–∏–ª–ª–∏–Ω–≥–∞';
COMMENT ON FUNCTION log_llm_usage IS '–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç LLM –∑–∞–ø—Ä–æ—Å –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—á–µ—Ç—á–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
COMMENT ON VIEW top_spenders IS '–¢–æ–ø-50 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º –Ω–∞ LLM';
COMMENT ON VIEW suspicious_activity IS '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é (–≤–æ–∑–º–æ–∂–Ω—ã–π DDOS/–∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ)';

