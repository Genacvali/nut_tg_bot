-- ============================================
-- QUICK LOG: –®–ê–ë–õ–û–ù–´ –ï–î–´ (MEAL TEMPLATES)
-- ============================================
-- –î–∞—Ç–∞: 2025-10-27
-- –û–ø–∏—Å–∞–Ω–∏–µ: –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —á–∞—Å—Ç—ã–µ –±–ª—é–¥–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
-- –¶–µ–ª—å: –£–º–µ–Ω—å—à–∏—Ç—å friction –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ ‚Üí –±–æ–ª—å—à–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ª–æ–≥–∏—Ä—É—é—Ç
-- ============================================

-- ============================================
-- 1. –¢–ê–ë–õ–ò–¶–ê –®–ê–ë–õ–û–ù–û–í –ï–î–´
-- ============================================

CREATE TABLE IF NOT EXISTS user_meal_templates (
  id BIGSERIAL PRIMARY KEY,
  user_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,

  -- –ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä "–ú–æ–π –∑–∞–≤—Ç—Ä–∞–∫", "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ–±–µ–¥")
  template_name VARCHAR(255) NOT NULL,

  -- –û–ø–∏—Å–∞–Ω–∏–µ –µ–¥—ã (—Ç–æ —á—Ç–æ –±—ã–ª–æ –≤ food_log)
  description TEXT NOT NULL,

  -- –ö–ë–ñ–£
  calories DECIMAL(8,2) NOT NULL,
  protein DECIMAL(6,2) NOT NULL,
  fats DECIMAL(6,2) NOT NULL,
  carbs DECIMAL(6,2) NOT NULL,

  -- –¢–∏–ø –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  meal_type VARCHAR(20), -- 'breakfast', 'lunch', 'dinner', 'snack'

  -- –ò–∫–æ–Ω–∫–∞/—ç–º–æ–¥–∑–∏ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
  emoji VARCHAR(10) DEFAULT 'üçΩÔ∏è',

  -- –°—á–µ—Ç—á–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
  use_count INT DEFAULT 0,
  last_used_at TIMESTAMPTZ,

  -- Timestamps
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW(),

  -- –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å: –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å 2 —à–∞–±–ª–æ–Ω–∞ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –∏–º–µ–Ω–µ–º
  UNIQUE(user_id, template_name)
);

-- –ò–Ω–¥–µ–∫—Å—ã
CREATE INDEX IF NOT EXISTS idx_meal_templates_user_id ON user_meal_templates(user_id);
CREATE INDEX IF NOT EXISTS idx_meal_templates_user_use_count ON user_meal_templates(user_id, use_count DESC);
CREATE INDEX IF NOT EXISTS idx_meal_templates_meal_type ON user_meal_templates(user_id, meal_type);

-- Trigger –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_meal_templates_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_update_meal_templates_updated_at
  BEFORE UPDATE ON user_meal_templates
  FOR EACH ROW
  EXECUTE FUNCTION update_meal_templates_updated_at();

-- ============================================
-- 2. –§–£–ù–ö–¶–ò–Ø: –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω –∏–∑ food_log
-- ============================================

CREATE OR REPLACE FUNCTION create_meal_template_from_log(
  p_user_id BIGINT,
  p_food_log_id BIGINT,
  p_template_name VARCHAR(255),
  p_emoji VARCHAR(10) DEFAULT 'üçΩÔ∏è'
)
RETURNS JSONB AS $$
DECLARE
  v_food_log RECORD;
  v_template_id BIGINT;
BEGIN
  -- –ü–æ–ª—É—á–∞–µ–º food_log
  SELECT * INTO v_food_log
  FROM food_logs
  WHERE id = p_food_log_id AND user_id = p_user_id;

  IF v_food_log IS NULL THEN
    RETURN jsonb_build_object(
      'success', false,
      'error', 'Food log not found'
    );
  END IF;

  -- –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω
  INSERT INTO user_meal_templates (
    user_id,
    template_name,
    description,
    calories,
    protein,
    fats,
    carbs,
    meal_type,
    emoji
  )
  VALUES (
    p_user_id,
    p_template_name,
    v_food_log.description,
    v_food_log.calories,
    v_food_log.protein,
    v_food_log.fats,
    v_food_log.carbs,
    v_food_log.meal_type,
    p_emoji
  )
  ON CONFLICT (user_id, template_name) DO UPDATE
  SET
    description = EXCLUDED.description,
    calories = EXCLUDED.calories,
    protein = EXCLUDED.protein,
    fats = EXCLUDED.fats,
    carbs = EXCLUDED.carbs,
    meal_type = EXCLUDED.meal_type,
    emoji = EXCLUDED.emoji,
    updated_at = NOW()
  RETURNING id INTO v_template_id;

  RETURN jsonb_build_object(
    'success', true,
    'template_id', v_template_id,
    'template_name', p_template_name
  );
END;
$$ LANGUAGE plpgsql;

-- ============================================
-- 3. –§–£–ù–ö–¶–ò–Ø: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω (—Å–æ–∑–¥–∞—Ç—å food_log)
-- ============================================

CREATE OR REPLACE FUNCTION use_meal_template(
  p_user_id BIGINT,
  p_template_id BIGINT
)
RETURNS JSONB AS $$
DECLARE
  v_template RECORD;
  v_food_log_id BIGINT;
BEGIN
  -- –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω
  SELECT * INTO v_template
  FROM user_meal_templates
  WHERE id = p_template_id AND user_id = p_user_id;

  IF v_template IS NULL THEN
    RETURN jsonb_build_object(
      'success', false,
      'error', 'Template not found'
    );
  END IF;

  -- –°–æ–∑–¥–∞–µ–º food_log
  INSERT INTO food_logs (
    user_id,
    description,
    calories,
    protein,
    fats,
    carbs,
    meal_type,
    logged_at
  )
  VALUES (
    p_user_id,
    v_template.description,
    v_template.calories,
    v_template.protein,
    v_template.fats,
    v_template.carbs,
    v_template.meal_type,
    NOW()
  )
  RETURNING id INTO v_food_log_id;

  -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
  UPDATE user_meal_templates
  SET
    use_count = use_count + 1,
    last_used_at = NOW()
  WHERE id = p_template_id;

  RETURN jsonb_build_object(
    'success', true,
    'food_log_id', v_food_log_id,
    'template_name', v_template.template_name,
    'calories', v_template.calories,
    'protein', v_template.protein,
    'fats', v_template.fats,
    'carbs', v_template.carbs
  );
END;
$$ LANGUAGE plpgsql;

-- ============================================
-- 4. –§–£–ù–ö–¶–ò–Ø: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —à–∞–±–ª–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
-- ============================================

CREATE OR REPLACE FUNCTION get_user_meal_templates(
  p_user_id BIGINT,
  p_meal_type VARCHAR(20) DEFAULT NULL,
  p_limit INT DEFAULT 10
)
RETURNS TABLE(
  id BIGINT,
  template_name VARCHAR(255),
  description TEXT,
  calories DECIMAL(8,2),
  protein DECIMAL(6,2),
  fats DECIMAL(6,2),
  carbs DECIMAL(6,2),
  meal_type VARCHAR(20),
  emoji VARCHAR(10),
  use_count INT,
  last_used_at TIMESTAMPTZ
) AS $$
BEGIN
  RETURN QUERY
  SELECT
    t.id,
    t.template_name,
    t.description,
    t.calories,
    t.protein,
    t.fats,
    t.carbs,
    t.meal_type,
    t.emoji,
    t.use_count,
    t.last_used_at
  FROM user_meal_templates t
  WHERE t.user_id = p_user_id
    AND (p_meal_type IS NULL OR t.meal_type = p_meal_type)
  ORDER BY t.use_count DESC, t.last_used_at DESC NULLS LAST
  LIMIT p_limit;
END;
$$ LANGUAGE plpgsql;

-- ============================================
-- 5. –§–£–ù–ö–¶–ò–Ø: –£–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω
-- ============================================

CREATE OR REPLACE FUNCTION delete_meal_template(
  p_user_id BIGINT,
  p_template_id BIGINT
)
RETURNS BOOLEAN AS $$
DECLARE
  v_deleted BOOLEAN;
BEGIN
  DELETE FROM user_meal_templates
  WHERE id = p_template_id AND user_id = p_user_id
  RETURNING TRUE INTO v_deleted;

  RETURN COALESCE(v_deleted, FALSE);
END;
$$ LANGUAGE plpgsql;

-- ============================================
-- 6. VIEW: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–ª—é–¥–∞ —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
-- ============================================

CREATE OR REPLACE VIEW popular_meal_templates AS
SELECT
  template_name,
  description,
  ROUND(AVG(calories), 0) as avg_calories,
  ROUND(AVG(protein), 1) as avg_protein,
  ROUND(AVG(fats), 1) as avg_fats,
  ROUND(AVG(carbs), 1) as avg_carbs,
  meal_type,
  emoji,
  COUNT(DISTINCT user_id) as users_count,
  SUM(use_count) as total_uses
FROM user_meal_templates
GROUP BY template_name, description, meal_type, emoji
HAVING COUNT(DISTINCT user_id) >= 3  -- –º–∏–Ω–∏–º—É–º 3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç
ORDER BY total_uses DESC
LIMIT 50;

-- ============================================
-- 7. –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò
-- ============================================

COMMENT ON TABLE user_meal_templates IS '–®–∞–±–ª–æ–Ω—ã —á–∞—Å—Ç—ã—Ö –±–ª—é–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è';
COMMENT ON FUNCTION create_meal_template_from_log IS '–°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ food_log';
COMMENT ON FUNCTION use_meal_template IS '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —à–∞–±–ª–æ–Ω - —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π food_log –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É';
COMMENT ON FUNCTION get_user_meal_templates IS '–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏';
COMMENT ON FUNCTION delete_meal_template IS '–£–¥–∞–ª—è–µ—Ç —à–∞–±–ª–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
COMMENT ON VIEW popular_meal_templates IS '–¢–æ–ø-50 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±–ª—é–¥ —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π';

-- ============================================
-- –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
-- ============================================
--
-- 1. –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω –∏–∑ food_log:
-- SELECT create_meal_template_from_log(42, 123, '–ú–æ–π –∑–∞–≤—Ç—Ä–∞–∫', '‚òïÔ∏è');
--
-- 2. –ü–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
-- SELECT * FROM get_user_meal_templates(42);
--
-- 3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω:
-- SELECT * FROM use_meal_template(42, 1);
--
-- 4. –£–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω:
-- SELECT delete_meal_template(42, 1);
--
-- 5. –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–ª—é–¥–∞:
-- SELECT * FROM popular_meal_templates;
-- ============================================
